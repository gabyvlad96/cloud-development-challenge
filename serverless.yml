org: gabyvlad96
app: node-server
service: node-server

frameworkVersion: '2'

custom:
  env_var:
    s3_bucket: BUCKET_NAME
    ddb_table_name: TABLE_NAME
    region: us-east-1
    arn: ARN

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: us-east-1
  stage: 'dev'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:PutObject'
            - 's3:GetObject'
            - 'dynamodb:PutItem'
          Resource:
            Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - ${self:custom.env_var.s3_bucket}
                - '/*'
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
          Resource:
            Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - ${self:custom.env_var.region}
                - ':${self:custom.env_var.arn}:'
                - 'table/'
                - ${self:custom.env_var.ddb_table_name}

functions:
  api:
    handler: api/handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
  trigger:
    handler: trigger/handler.handler
    events:
      - s3:
          bucket: ${self:custom.env_var.s3_bucket}
          event: s3:ObjectCreated:*
          existing: true

resources:
  Resources:
    myBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.env_var.s3_bucket}
    filesDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.env_var.ddb_table_name}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1