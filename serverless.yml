org: gabyvlad96
app: node-server
service: node-server

frameworkVersion: '2'

custom:
  env_var:
    s3_bucket: myservice-gabi235087594-mybucket
    ddb_table_name: files_data_table
    region: us-east-1
    id: 'ACCOUNT_ID'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: us-east-1
  stage: 'dev'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:PutObject'
            - 's3:GetObject'
            - 'dynamodb:PutItem'
          Resource:
            Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - ${self:custom.env_var.s3_bucket}
                - '/*'
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
          Resource:
            Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - ${self:custom.env_var.region}
                - ':${self:custom.env_var.id}:'
                - 'table/'
                - ${self:custom.env_var.ddb_table_name}

functions:
  api:
    handler: api/apiHandler.handler
    events:
      - http:
          path: /
          method: ANY
          authorizer: authorizerFunc
      - http:
          path: /{proxy+}
          method: ANY
          authorizer: authorizerFunc
  trigger:
    handler: trigger/triggerHandler.handler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ':'
              - - 'arn:aws:sqs'
                - ${self:custom.env_var.region}
                - ${self:custom.env_var.id}
                - 'EventQueue'
  authorizerFunc:
    handler: auth/authHandler.handler

resources:
  Resources:
    EventQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "EventQueue"
    myBucket:
      Type: AWS::S3::Bucket
      DependsOn:
        - QueuePolicy
      Properties:
        BucketName: ${self:custom.env_var.s3_bucket}
        NotificationConfiguration:
          QueueConfigurations:
            - Event: 's3:ObjectCreated:*'
              Queue:
                Fn::Join:
                  - ':'
                  - - 'arn:aws:sqs'
                    - ${self:custom.env_var.region}
                    - ${self:custom.env_var.id}
                    - 'EventQueue'
    filesDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.env_var.ddb_table_name}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    QueuePolicy:
      Type: 'AWS::SQS::QueuePolicy'
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: "s3.amazonaws.com"
              Action:
                - 'SQS:SendMessage'
              Resource:
                Fn::Join:
                  - ':'
                  - - 'arn:aws:sqs'
                    - ${self:custom.env_var.region}
                    - ${self:custom.env_var.id}
                    - 'EventQueue'
              Condition:
                ArnLike:
                  aws:SourceArn:
                    Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - ${self:custom.env_var.s3_bucket}
        Queues:
          - EventQueue
